1. What type would you choose for the following “numbers”?
A person’s telephone number : int
A person’s height: float
A person’s age: int
A person’s gender (Male, Female, Prefer Not To Answer): string
A person’s salary: decimal
A book’s ISBN: int
A book’s price: decimal
A book’s shipping weight: float
A country’s population: long
The number of stars in the universe: ulong
The number of employees in each of the small or medium businesses in the:int  United Kingdom (up to about 50,000 employees per business): int

2. What are the difference between value type and reference type variables? What is
boxing and unboxing?: 

Value types directly contain their data, while reference types store a reference to the data's memory address. Value types are 
stored on the stack, while reference types are stored on the heap. Value types will not be collected by the garbage collector but the
reference types will be collected by the garbage collector when they are no longer in use.

Boxing is the process of converting a value type to a reference 
type by wrapping it in an object, while unboxing is the process of extracting the value type from the object.


3. What is meant by the terms managed resource and unmanaged resource in .NET

th e managed resources are those that are handled garbage collector
The unmanaged resources are those that are not handled by garbage collector like file handles, database connections etc.

4. Whats the purpose of Garbage Collector in .NET?
The purpose of Garbage Collector in .NET is to automatically manage memory by freeing memory occupied by objects that are no longer in use,




1. What happens when you divide an int variable by 0?
You get a DivideByZeroException
2. What happens when you divide a double variable by 0?
You get infinity
3. What happens when you overflow an int variable, that is, set it to a value beyond its
range?
It loops around to the negative range
4. What is the difference between x = y++; and x = ++y;?
in x = y++; the value of y is assigned to x and then y is incremented by 1. 
In x = ++y, y is incremented by 1 first and then the y + 1 value is assigned to x
5. What is the difference between break, continue, and return when used inside a loop
statement?
break exits the loop, continue skips the current iteration and moves on to the next, return exits the method
6. What are the three parts of a for statement and which of them are required?
initialization, condition, and the iterator. All of them are optional
7. What is the difference between the = and == operators?
= is the assignment operator which is used to assign variables
== is the equality operator which is used to compare two values
8. Does the following statement compile? for ( ; true; ) ;
Yes, it compiles but it creates an infinite loop.
9. What does the underscore _ represent in a switch expression?
The _ is a discard pattern which matches any value not match by previous patterns in a switch operation
10. What interface must an object implement to be enumerated over by using the foreach
statement?
The object must implement the IEnumerable interface to be enumerated over by using the foreach statement.



int max = 500;
for (byte i = 0; i < max; i++)
{
WriteLine(i);
}

If this code is executed, it will result in an infinite loop because the byte data type can only hold values from 0 to 255. 
When i reaches 255 and is incremented, it overflows and wraps around to 0, causing the loop condition (i < max) to always be true.

To fix this, you should change the data type of i from byte to int:





